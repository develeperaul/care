/*
! tailwindcss v3.3.5 | MIT License | https://tailwindcss.com
*/

/*
1. Prevent padding and border from affecting element width. (https://github.com/mozdevs/cssremedy/issues/4)
2. Allow adding a border to an element by just adding a border-width. (https://github.com/tailwindcss/tailwindcss/pull/116)
*/

*,
::before,
::after {
  box-sizing: border-box;
  /* 1 */
  border-width: 0;
  /* 2 */
  border-style: solid;
  /* 2 */
  border-color: currentColor;
  /* 2 */
}

::before,
::after {
  --tw-content: '';
}

/*
1. Use a consistent sensible line-height in all browsers.
2. Prevent adjustments of font size after orientation changes in iOS.
3. Use a more readable tab size.
4. Use the user's configured `sans` font-family by default.
5. Use the user's configured `sans` font-feature-settings by default.
6. Use the user's configured `sans` font-variation-settings by default.
*/

html {
  line-height: 1.5;
  /* 1 */
  -webkit-text-size-adjust: 100%;
  /* 2 */
  /* 3 */
  tab-size: 4;
  /* 3 */
  font-family: ui-sans-serif, system-ui, -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", Arial, "Noto Sans", sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";
  /* 4 */
  font-feature-settings: normal;
  /* 5 */
  font-variation-settings: normal;
  /* 6 */
}

/*
1. Remove the margin in all browsers.
2. Inherit line-height from `html` so users can set them as a class directly on the `html` element.
*/

body {
  margin: 0;
  /* 1 */
  line-height: inherit;
  /* 2 */
}

/*
1. Add the correct height in Firefox.
2. Correct the inheritance of border color in Firefox. (https://bugzilla.mozilla.org/show_bug.cgi?id=190655)
3. Ensure horizontal rules are visible by default.
*/

hr {
  height: 0;
  /* 1 */
  color: inherit;
  /* 2 */
  border-top-width: 1px;
  /* 3 */
}

/*
Add the correct text decoration in Chrome, Edge, and Safari.
*/

abbr:where([title]) {
  -webkit-text-decoration: underline dotted;
          text-decoration: underline dotted;
}

/*
Remove the default font size and weight for headings.
*/

h1,
h2,
h3,
h4,
h5,
h6 {
  font-size: inherit;
  font-weight: inherit;
}

/*
Reset links to optimize for opt-in styling instead of opt-out.
*/

a {
  color: inherit;
  text-decoration: inherit;
}

/*
Add the correct font weight in Edge and Safari.
*/

b,
strong {
  font-weight: bolder;
}

/*
1. Use the user's configured `mono` font family by default.
2. Correct the odd `em` font sizing in all browsers.
*/

code,
kbd,
samp,
pre {
  font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */
}

/*
Add the correct font size in all browsers.
*/

small {
  font-size: 80%;
}

/*
Prevent `sub` and `sup` elements from affecting the line height in all browsers.
*/

sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sub {
  bottom: -0.25em;
}

sup {
  top: -0.5em;
}

/*
1. Remove text indentation from table contents in Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=999088, https://bugs.webkit.org/show_bug.cgi?id=201297)
2. Correct table border color inheritance in all Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=935729, https://bugs.webkit.org/show_bug.cgi?id=195016)
3. Remove gaps between table borders by default.
*/

table {
  text-indent: 0;
  /* 1 */
  border-color: inherit;
  /* 2 */
  border-collapse: collapse;
  /* 3 */
}

/*
1. Change the font styles in all browsers.
2. Remove the margin in Firefox and Safari.
3. Remove default padding in all browsers.
*/

button,
input,
optgroup,
select,
textarea {
  font-family: inherit;
  /* 1 */
  font-feature-settings: inherit;
  /* 1 */
  font-variation-settings: inherit;
  /* 1 */
  font-size: 100%;
  /* 1 */
  font-weight: inherit;
  /* 1 */
  line-height: inherit;
  /* 1 */
  color: inherit;
  /* 1 */
  margin: 0;
  /* 2 */
  padding: 0;
  /* 3 */
}

/*
Remove the inheritance of text transform in Edge and Firefox.
*/

button,
select {
  text-transform: none;
}

/*
1. Correct the inability to style clickable types in iOS and Safari.
2. Remove default button styles.
*/

button,
[type='button'],
[type='reset'],
[type='submit'] {
  -webkit-appearance: button;
  /* 1 */
  background-color: transparent;
  /* 2 */
  background-image: none;
  /* 2 */
}

/*
Use the modern Firefox focus style for all focusable elements.
*/

:-moz-focusring {
  outline: auto;
}

/*
Remove the additional `:invalid` styles in Firefox. (https://github.com/mozilla/gecko-dev/blob/2f9eacd9d3d995c937b4251a5557d95d494c9be1/layout/style/res/forms.css#L728-L737)
*/

:-moz-ui-invalid {
  box-shadow: none;
}

/*
Add the correct vertical alignment in Chrome and Firefox.
*/

progress {
  vertical-align: baseline;
}

/*
Correct the cursor style of increment and decrement buttons in Safari.
*/

::-webkit-inner-spin-button,
::-webkit-outer-spin-button {
  height: auto;
}

/*
1. Correct the odd appearance in Chrome and Safari.
2. Correct the outline style in Safari.
*/

[type='search'] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */
}

/*
Remove the inner padding in Chrome and Safari on macOS.
*/

::-webkit-search-decoration {
  -webkit-appearance: none;
}

/*
1. Correct the inability to style clickable types in iOS and Safari.
2. Change font properties to `inherit` in Safari.
*/

::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */
}

/*
Add the correct display in Chrome and Safari.
*/

summary {
  display: list-item;
}

/*
Removes the default spacing and border for appropriate elements.
*/

blockquote,
dl,
dd,
h1,
h2,
h3,
h4,
h5,
h6,
hr,
figure,
p,
pre {
  margin: 0;
}

fieldset {
  margin: 0;
  padding: 0;
}

legend {
  padding: 0;
}

ol,
ul,
menu {
  list-style: none;
  margin: 0;
  padding: 0;
}

/*
Reset default styling for dialogs.
*/

dialog {
  padding: 0;
}

/*
Prevent resizing textareas horizontally by default.
*/

textarea {
  resize: vertical;
}

/*
1. Reset the default placeholder opacity in Firefox. (https://github.com/tailwindlabs/tailwindcss/issues/3300)
2. Set the default placeholder color to the user's configured gray 400 color.
*/

input::placeholder,
textarea::placeholder {
  opacity: 1;
  /* 1 */
  color: #9ca3af;
  /* 2 */
}

/*
Set the default cursor for buttons.
*/

button,
[role="button"] {
  cursor: pointer;
}

/*
Make sure disabled buttons don't get the pointer cursor.
*/

:disabled {
  cursor: default;
}

/*
1. Make replaced elements `display: block` by default. (https://github.com/mozdevs/cssremedy/issues/14)
2. Add `vertical-align: middle` to align replaced elements more sensibly by default. (https://github.com/jensimmons/cssremedy/issues/14#issuecomment-634934210)
   This can trigger a poorly considered lint error in some tools but is included by design.
*/

img,
svg,
video,
canvas,
audio,
iframe,
embed,
object {
  display: block;
  /* 1 */
  vertical-align: middle;
  /* 2 */
}

/*
Constrain images and videos to the parent width and preserve their intrinsic aspect ratio. (https://github.com/mozdevs/cssremedy/issues/14)
*/

img,
video {
  max-width: 100%;
  height: auto;
}

/* Make elements with the HTML hidden attribute stay hidden by default */

[hidden] {
  display: none;
}

html {
  font-size: 100%;
  scroll-behavior: smooth;
}

body {
  min-height: 100vh;
  font-family: CeraPro;
  font-size: 1.125rem;
  line-height: 1.4375rem;
  --tw-text-opacity: 1;
  color: rgb(38 52 114 / var(--tw-text-opacity));
}

@media (min-width: 1024px) {
  body {
    font-size: 1.875rem;
    line-height: 2.8125rem;
  }
}

h1 {
  font-size: 1.75rem;
  line-height: normal;
}

@media (min-width: 1024px) {
  h1 {
    font-size: 7.5rem;
    line-height: 7.5rem;
  }
}

h2 {
  font-size: 1.75rem;
  line-height: normal;
}

@media (min-width: 1024px) {
  h2 {
    font-size: 4.375rem;
    line-height:  5rem ;
  }
}

h3 {
  font-size: 1.75rem;
  line-height: normal;
}

@media (min-width: 1024px) {
  h3 {
    font-size: 3.125rem;
    line-height:  3.75rem;
  }
}

*, ::before, ::after {
  --tw-border-spacing-x: 0;
  --tw-border-spacing-y: 0;
  --tw-translate-x: 0;
  --tw-translate-y: 0;
  --tw-rotate: 0;
  --tw-skew-x: 0;
  --tw-skew-y: 0;
  --tw-scale-x: 1;
  --tw-scale-y: 1;
  --tw-pan-x:  ;
  --tw-pan-y:  ;
  --tw-pinch-zoom:  ;
  --tw-scroll-snap-strictness: proximity;
  --tw-gradient-from-position:  ;
  --tw-gradient-via-position:  ;
  --tw-gradient-to-position:  ;
  --tw-ordinal:  ;
  --tw-slashed-zero:  ;
  --tw-numeric-figure:  ;
  --tw-numeric-spacing:  ;
  --tw-numeric-fraction:  ;
  --tw-ring-inset:  ;
  --tw-ring-offset-width: 0px;
  --tw-ring-offset-color: #fff;
  --tw-ring-color: rgb(59 130 246 / 0.5);
  --tw-ring-offset-shadow: 0 0 #0000;
  --tw-ring-shadow: 0 0 #0000;
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  --tw-blur:  ;
  --tw-brightness:  ;
  --tw-contrast:  ;
  --tw-grayscale:  ;
  --tw-hue-rotate:  ;
  --tw-invert:  ;
  --tw-saturate:  ;
  --tw-sepia:  ;
  --tw-drop-shadow:  ;
  --tw-backdrop-blur:  ;
  --tw-backdrop-brightness:  ;
  --tw-backdrop-contrast:  ;
  --tw-backdrop-grayscale:  ;
  --tw-backdrop-hue-rotate:  ;
  --tw-backdrop-invert:  ;
  --tw-backdrop-opacity:  ;
  --tw-backdrop-saturate:  ;
  --tw-backdrop-sepia:  ;
}

::backdrop {
  --tw-border-spacing-x: 0;
  --tw-border-spacing-y: 0;
  --tw-translate-x: 0;
  --tw-translate-y: 0;
  --tw-rotate: 0;
  --tw-skew-x: 0;
  --tw-skew-y: 0;
  --tw-scale-x: 1;
  --tw-scale-y: 1;
  --tw-pan-x:  ;
  --tw-pan-y:  ;
  --tw-pinch-zoom:  ;
  --tw-scroll-snap-strictness: proximity;
  --tw-gradient-from-position:  ;
  --tw-gradient-via-position:  ;
  --tw-gradient-to-position:  ;
  --tw-ordinal:  ;
  --tw-slashed-zero:  ;
  --tw-numeric-figure:  ;
  --tw-numeric-spacing:  ;
  --tw-numeric-fraction:  ;
  --tw-ring-inset:  ;
  --tw-ring-offset-width: 0px;
  --tw-ring-offset-color: #fff;
  --tw-ring-color: rgb(59 130 246 / 0.5);
  --tw-ring-offset-shadow: 0 0 #0000;
  --tw-ring-shadow: 0 0 #0000;
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  --tw-blur:  ;
  --tw-brightness:  ;
  --tw-contrast:  ;
  --tw-grayscale:  ;
  --tw-hue-rotate:  ;
  --tw-invert:  ;
  --tw-saturate:  ;
  --tw-sepia:  ;
  --tw-drop-shadow:  ;
  --tw-backdrop-blur:  ;
  --tw-backdrop-brightness:  ;
  --tw-backdrop-contrast:  ;
  --tw-backdrop-grayscale:  ;
  --tw-backdrop-hue-rotate:  ;
  --tw-backdrop-invert:  ;
  --tw-backdrop-opacity:  ;
  --tw-backdrop-saturate:  ;
  --tw-backdrop-sepia:  ;
}

@mixin CeraPro {
  $path: '../fonts';

  @font-face {
    font-family: 'CeraPro';

    src: url(#{$path}/CeraPro-Regular.eot);

    src: local('CeraPro-Regular'), local('CeraPro-Regular'),
      url(#{$path}/CeraPro-Regular.eot?#iefix) format('embedded-opentype'),
      url(#{$path}/CeraPro-Regular.woff) format('woff'),
      url(#{$path}/CeraPro-Regular.ttf) format('truetype');

    font-weight: normal;

    font-style: normal;

    font-display: swap;
  }

  @font-face {
    font-family: 'CeraPro';

    src: url(#{$path}/CeraPro-500.eot);

    src: local('CeraPro-700'), local('CeraPro-500'),
      url(#{$path}/CeraPro-500.eot?#iefix) format('embedded-opentype'),
      url(#{$path}/CeraPro-500.woff) format('woff'),
      url(#{$path}/CeraPro-500.ttf) format('truetype');

    font-weight: 500;

    font-style: normal;

    font-display: swap;
  }

  @font-face {
    font-family: 'CeraPro';

    src: url(#{$path}/CeraPro-700.eot);

    src: local('CeraPro-700'), local('CeraPro-700'),
      url(#{$path}/CeraPro-700.eot?#iefix) format('embedded-opentype'),
      url(#{$path}/CeraPro-700.woff) format('woff'),
      url(#{$path}/CeraPro-700.ttf) format('truetype');

    font-weight: 700;

    font-style: normal;

    font-display: swap;
  }
}

@include CeraPro();

.container {
  width: 100%;
  margin-right: auto;
  margin-left: auto;
}

@media (min-width: 769px) {
  .container {
    max-width: 769px;
  }
}

@media (min-width: 1024px) {
  .container {
    max-width: 1024px;
  }
}

@media (min-width: 1660px) {
  .container {
    max-width: 1660px;
  }
}

@media (min-width: 1920px) {
  .container {
    max-width: 1920px;
  }
}

.container {
  max-width: 1530px;
  padding: 0 40px;
  margin-right: auto;
  margin-left: auto;
}

@media (min-width: 1660px) {
  .container {
    max-width: 1920px;
    padding: 0 195px;
  }
}

/* button */

.button {
  display: flex;
  height: 3.125rem;
  width: 100%;
  align-items: center;
  justify-content: center;
  gap: 0.5rem;
  padding-left: 1rem;
  padding-right: 1rem;
  font-size: 1.125rem;
  line-height:  normal;
}

@media (min-width: 1024px) {
  .button {
    font-size: 1.25rem;
    line-height:  normal;
  }
}

.button {
  &_green {
    --tw-bg-opacity: 1;
    background-color: rgb(97 227 84 / var(--tw-bg-opacity));
  }
  &_green {
    --tw-text-opacity: 1;
    color: rgb(255 255 255 / var(--tw-text-opacity));
  }
  &_blue-light {
    --tw-bg-opacity: 1;
    background-color: rgb(0 190 250 / var(--tw-bg-opacity));
  }
  &_blue-light {
    --tw-text-opacity: 1;
    color: rgb(255 255 255 / var(--tw-text-opacity));
  }
  &_orange {
    --tw-bg-opacity: 1;
    background-color: rgb(255 90 2 / var(--tw-bg-opacity));
  }
  &_orange {
    --tw-text-opacity: 1;
    color: rgb(255 255 255 / var(--tw-text-opacity));
  }
  &_border {
    border-width: 1px;
  }
  &_border {
    --tw-border-opacity: 1;
    border-color: rgb(255 255 255 / var(--tw-border-opacity));
  }
  &_border {
    background-color: transparent;
  }
  &_border {
    --tw-text-opacity: 1;
    color: rgb(255 255 255 / var(--tw-text-opacity));
  }
}

.btn-prev,
  .btn-next {
  display: grid;
  height: 2.375rem;
  width: 2.375rem;
  place-content: center;
  border-radius: 9999px;
}

@media (min-width: 1024px) {
  .btn-prev,
  .btn-next {
    height: 3.63rem;
    width: 3.63rem;
  }
}

.btn-prev,
  .btn-next {
  & > svg {
    height: 0.75rem;
  }
  & > svg {
    width: 0.75rem;
  }
  @media (min-width: 1024px) {
    & > svg {
      height: 1.25rem;
    }
  }
  @media (min-width: 1024px) {
    & > svg {
      width: 1.25rem;
    }
  }
}

/* input */

.field {
  width: 100%;
  & input {
    height: 3.25rem;
  }
  & input {
    width: 100%;
  }
  & input {
    border-width: 1px;
  }
  & input {
    --tw-border-opacity: 1;
    border-color: rgb(38 52 114 / var(--tw-border-opacity));
  }
  & input {
    padding-left: 0.875rem;
    padding-right: 0.875rem;
  }
  & input {
    font-size: 0.875rem;
    line-height:  1.5rem;
  }
  @media (min-width: 1024px) {
    & input {
      padding-left: 1.25rem;
      padding-right: 1.25rem;
    }
  }
  @media (min-width: 1024px) {
    & input {
      font-size: 1.125rem;
      line-height:  normal;
    }
  }
  & input::placeholder {
    --tw-text-opacity: 1;
    color: rgb(38 52 114 / var(--tw-text-opacity));
  }
  & input:focus {
    background-color: rgb(225 225 225 / 0.1);
  }
  & input:focus {
    outline-color: rgb(38 52 114 / 0.8);
  }
  & input {
    transition: all 0.3s ease;
  }
  &__invalid input {
    --tw-border-opacity: 1;
    border-color: rgb(255 90 2 / var(--tw-border-opacity));
  }
}

.checkbox-other {
  position: relative;
  display: block;
  cursor: pointer;
  --tw-text-opacity: 1;
  color: rgb(38 52 114 / var(--tw-text-opacity));
  -webkit-user-select: none;
          user-select: none;
  opacity: 0.8;
}

.checkbox-other input[type='checkbox'] {
  position: absolute;
  z-index: -1;
  opacity: 0;
  display: block;
  width: 0;
  height: 0;
}

.checkbox-other p {
  position: relative;
  display: inline-block;
  font-size: 0.75rem;
  line-height: normal;
}

@media (min-width: 1024px) {
  .checkbox-other p {
    font-size: 1rem;
    line-height:  normal;
  }
}

.checkbox-other p {
  padding: 0 0 0 28px;
}

.checkbox-other p:before {
  content: '';
  position: absolute;
  top: 0px;
  left: 0px;
  height: 1.25rem;
  width: 1.25rem;
  border-radius: 9999px;
  border-width: 1px;
  --tw-border-opacity: 1;
  border-color: rgb(38 52 114 / var(--tw-border-opacity));
}

/* Checked */

.checkbox-other input[type='checkbox'] + p:after {
  content: '';
  opacity: 0;
  transition: opacity 0.3s ease;
}

.checkbox-other input[type='checkbox']:checked + p:after {
  left: 0.3rem;
  top: 0.375rem;
  height: 0.5rem;
  width: 0.625rem;
  position: absolute;
  content: '';
  background-image: url(../assets/icons/other/check.svg);
  background-repeat: no-repeat;
  background-position: center;
  background-size: contain;
  opacity: 1;
}

.checkbox-other input[type='checkbox']:checked + p:before {
  background: #263472;
}

/* Focus */

/* Hover */

.checkbox-other p:hover:after {
  filter: brightness(110%);
}

/* Active */

.checkbox-other p:active:before,
  .checkbox-other p:active:after {
  /* filter: brightness(30%); */
}

/* Disabled */

.checkbox-other input[type='checkbox']:disabled + p {
  color: #666;
  cursor: default;
}

.checkbox-other input[type='checkbox']:disabled + p:before,
  .checkbox-other input[type='checkbox']:disabled + p:after {
  filter: grayscale(100%);
  opacity: 0.6;
}

.absolute {
  position: absolute;
}

.relative {
  position: relative;
}

.top-10 {
  top: 2.5rem;
}

.col-span-2 {
  grid-column: span 2 / span 2;
}

.-mx-10 {
  margin-left: -2.5rem;
  margin-right: -2.5rem;
}

.ml-10 {
  margin-left: 2.5rem;
}

.ml-auto {
  margin-left: auto;
}

.mr-0 {
  margin-right: 0px;
}

.mr-10 {
  margin-right: 2.5rem;
}

.block {
  display: block;
}

.grid {
  display: grid;
}

.hidden {
  display: none;
}

.h-\[80\%\] {
  height: 80%;
}

.w-\[80\%\] {
  width: 80%;
}

.w-fit {
  width: -moz-fit-content;
  width: fit-content;
}

.grid-cols-2 {
  grid-template-columns: repeat(2, minmax(0, 1fr));
}

.border {
  border-width: 1px;
}

.bg-blue-light {
  --tw-bg-opacity: 1;
  background-color: rgb(0 190 250 / var(--tw-bg-opacity));
}

.bg-green {
  --tw-bg-opacity: 1;
  background-color: rgb(97 227 84 / var(--tw-bg-opacity));
}

.uppercase {
  text-transform: uppercase;
}

main {
  display: grid;
  gap: 3.75rem;
}

.section {
  & h2 {
    margin-bottom: 1.25rem;
  }
  @media (min-width: 1024px) {
    & h2 {
      margin-bottom: 0px;
    }
  }
}

.sidebar {
  transition: all 0.3s ease;
  position: fixed;
  height: 100vh;
  width: 100vw;
  --tw-translate-x: -100%;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
  --tw-bg-opacity: 1;
  background-color: rgb(38 52 114 / var(--tw-bg-opacity));
}

@media (min-width: 1024px) {
  .sidebar {
    --tw-translate-x: -100% !important;
    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y)) !important;
  }
}

.sidebar {
  z-index: 10000;
  &__head {
    display: flex;
  }
  &__head {
    align-items: center;
  }
  &__head {
    justify-content: space-between;
  }
  &__head {
    padding-top: 1.875rem;
  }
  &__head {
    padding-bottom: 2.5rem;
  }
}

.sidebar.active {
  --tw-translate-x: 0px;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.sidebar .logo svg {
  height: 1.92rem;
  width: 7rem;
  --tw-text-opacity: 1;
  color: rgb(255 255 255 / var(--tw-text-opacity));
}

@media (min-width: 1024px) {
  .sidebar .logo svg {
    height: 3.94rem;
    width: 14.4rem;
  }
}

.sidebar .close {
  padding: 5px;
  border-radius: 999px;
  & svg {
    height: 1.15063rem;
  }
  & svg {
    width: 1.15063rem;
  }
  & svg {
    --tw-text-opacity: 1;
    color: rgb(255 255 255 / var(--tw-text-opacity));
  }
}

.sidebar nav.sidebar__content {
  display: grid;
  gap: 1.5rem;
  & a {
    display: flex;
  }
  & a {
    align-items: center;
  }
  & a {
    gap: 0.5rem;
  }
  & a {
    padding-top: 0.5rem;
    padding-bottom: 0.5rem;
  }
  & a {
    font-size: 1rem;
    line-height:  normal;
  }
  & a {
    font-weight: 500;
  }
  & a {
    --tw-text-opacity: 1;
    color: rgb(255 255 255 / var(--tw-text-opacity));
  }
}

.header {
  margin-bottom: 3.75rem;
}

@media (min-width: 1024px) {
  .header {
    margin-bottom: 8.81rem;
  }
}

.header .header__wrapper {
  position: relative;
  display: flex;
  align-items: center;
  justify-content: space-between;
  padding-top: 2.1rem;
  padding-bottom: 1.9rem;
}

@media (min-width: 1024px) {
  .header .header__wrapper {
    padding-top: 2.5rem;
    padding-bottom: 2.5rem;
    padding-left: 0px;
    padding-right: 0px;
  }
}

.header .header__wrapper .logo svg {
  height: 1.92rem;
  width: 7rem;
  --tw-text-opacity: 1;
  color: rgb(38 52 114 / var(--tw-text-opacity));
}

@media (min-width: 1024px) {
  .header .header__wrapper .logo svg {
    height: 3.94rem;
    width: 14.4rem;
  }

  .header .header__wrapper .burger {
    display: none;
  }
}

.header .header__wrapper .burger {
  padding: 5px;
  border-radius: 999px;
}

.header .header__wrapper nav {
  display: none;
  font-size: 1.125rem;
  line-height:  normal;
  text-transform: uppercase;
  --tw-text-opacity: 1;
  color: rgb(38 52 114 / var(--tw-text-opacity));
}

@media (min-width: 1024px) {
  .header .header__wrapper nav {
    display: flex;
  }
}

.header .header__wrapper nav {
  gap: 4.94rem;
}

.header .header__wrapper .call {
  display: none;
  height: 2.875rem;
  width: 2.875rem;
  place-content: center;
  border-radius: 9999px;
  --tw-bg-opacity: 1;
  background-color: rgb(38 52 114 / var(--tw-bg-opacity));
}

@media (min-width: 1024px) {
  .header .header__wrapper .call {
    display: grid;
  }
}

.header .header__wrapper .call {
  position: absolute;
  right: -6rem;
}

.header .pickup {
  margin-top: 3.75rem;
}

@media (min-width: 1024px) {
  .header .pickup {
    margin-top: 3.92rem;
  }
}

.header.header__second .pickup {
  position: relative;
  z-index: 10;
  margin-top: 2.5rem;
}

@media (min-width: 1024px) {
  .header.header__second .pickup {
    margin-top: -7.375rem;
  }
}

.header.header__accept .pickup {
  position: relative;
  z-index: 10;
  margin-top: 3.75rem;
}

@media (min-width: 1024px) {
  .header.header__accept .pickup {
    margin-top: -7.375rem;
  }
}

.header.header__single {
  .single {
    position: relative;
  }
  .single {
    margin-bottom: 3.75rem;
  }
  .single {
    max-width: 1920px;
  }
  .single {
    img {
      height: 15.625rem;
    }
    img {
      width: 100%;
    }
    img {
      object-fit: cover;
    }
    @media (min-width: 1024px) {
      img {
        height: 52.6rem;
      }
    }
    @media (min-width: 1024px) {
      img {
        width: 104rem;
      }
    }
    @media (min-width: 1024px) {
      img {
        padding-left: 4.06rem;
      }
    }
    @media (min-width: 1024px) {
      img {
        padding-top: 4rem;
      }
    }
    &__top {
      position: absolute;
    }
    &__top {
      top: 1.88rem;
    }
    &__top {
      z-index: 10;
    }
    &__top {
      text-transform: uppercase;
    }
    &__top {
      --tw-text-opacity: 1;
      color: rgb(255 255 255 / var(--tw-text-opacity));
    }
    &__top {
      top: 7.88rem;
    }
    .title {
    }
  }
}

:root {
  --second-height-bg: 15.6rem;
}

@media (min-width: 1024px) {
  .lg2\:absolute {
    position: absolute;
  }

  .lg2\:right-0 {
    right: 0px;
  }

  .lg2\:top-1\/2 {
    top: 50%;
  }

  .lg2\:m-0 {
    margin: 0px;
  }

  .lg2\:ml-auto {
    margin-left: auto;
  }

  .lg2\:mr-0 {
    margin-right: 0px;
  }

  .lg2\:block {
    display: block;
  }

  .lg2\:h-\[46rem\] {
    height: 46rem;
  }

  .lg2\:min-w-\[40rem\] {
    min-width: 40rem;
  }

  .lg2\:max-w-\[46rem\] {
    max-width: 46rem;
  }

  .lg2\:-translate-y-1\/2 {
    --tw-translate-y: -50%;
    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
  }

  .lg2\:transform {
    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
  }

  .lg2\:pt-22 {
    padding-top: 5.5rem;
  }
}
